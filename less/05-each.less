// 循环
// 利用提供的 each 函数
// 声明数组使用 , 分隔符隔开即认为是数组
@colorList: red, orange, green, pink;
@len: length(@colorList);

#each {
    // 参数1，是需要循环的数组，
    // 参数2，可以是一个匿名的混入，相当于回调函数
    each(@colorList, .(@item, @index) {
            .col-@{index} {
                width: (@index / @len * 100%);
                height: 80px;
                // 提取
                background-color: @item;
            }
        }
    );
}

// 使用 range 函数可以快速获取一个指定长度的数据，元素默认为从 1 开始逐步递增 1 的自然数。
// range(4)   ==>  1, 2, 3, 4

// 也可以用 递归 模拟实现
// .grids(@n, @i: 1) when (@i <= @n) {
//     .col-@{i} {
//         width: (@i / @n * 100%);
//     }
//     .grids(@n, @i + 1);
// }
// .grids(4);